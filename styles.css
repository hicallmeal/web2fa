html {
  box-sizing: border-box; /* https://css-tricks.com/box-sizing/ */
}

*, *:before, *:after {
  box-sizing: inherit;   
  margin: 0;
  padding: 0;
}


body {
  overflow:hidden;
  height:450px;
  width:300px;
  user-select: none;
}

/* var defs */

:root body {
  --shadow: 0px 0px 1px 0 rgb(65 69 73 / 30%), 0 1px 3px 1px rgb(65 69 73 / 15%);
  --light-grey: #f2f2f2;
  --slightly-darker-grey: #ececec;

  /* Testing Only */
  --va: 1.35;
  --v2: 0.9;

  --code-blue: #076cbd;  /*#0077d7 color: #225fbb;  nice-blue #468ffd*/
}




/* Top Section - Header (Controls, title) */

#header {
  border-bottom-left-radius: 2px;
  border-bottom-right-radius: 2px;
}


/* Main Content - Tokens + Scanner */

/* Container Part */

#main {
  padding-right: 8px;
  height: 390px;
  overflow-y:hidden;
  overflow-x:hidden;
  background-color: var(--light-grey);
  /* transition:background-color 0.3s ease-out; */
}

#main:hover {
  overflow-y: scroll;
  padding-right: 2px;
}

#main::-webkit-scrollbar-thumb {
  background-color: #a6a6a6; /* #d1d1d1; */
  border: 2px solid #eee; /* var(--light-grey) */ 
}

::-webkit-scrollbar {
  width: 6px;
}

/* Token Content */




/* Scanner Content */

#scanner {
  position: fixed;
  bottom: 66px;
  right: 16px;
  background-color: #1fbd87; /* #30cb1e ? */
  box-shadow: 0px 1px 2px 0px rgb(65 69 73 / 30%), 0 1px 3px 1px rgb(65 69 73 / 15%);
  border-radius: 8px;
  cursor: pointer;
  padding: calc(var(--v2) * 5.5px) calc(var(--v2) * 1.9px);
  display: flex;
  flex-direction: row;
  transition: 0.2s ease-in;
}

#qrIcon {
  width: calc(var(--va)* 41px);
  height: calc(var(--va)*31px);
  fill: none;
}

#qrIcon > g {
  transform: matrix(calc(1.2916667 * var(--va)), 0, 0, calc(1.2916667 * var(--va)), calc(5 * var(--va)), -0);
}

#qrIcon path {
  stroke: black;
  stroke-linecap: round; /* for both, square or round work */
  stroke-linejoin: round;
  transition: 0.2s ease-in-out;
}

/* Hover Animation Bits */

#scanner:hover #rimTL {
  transform:translate(-2px, -2px);
}

#scanner:hover #rimTR {
  transform:translate(2px, -2px);
}

#scanner:hover #rimBL {
  transform:translate(-2px, 2px);
}

#scanner:hover #rimBR {
  transform:translate(2px, 2px);
}

#innerQR {
  transition: 0.2s ease-in-out;
  transform-origin: 12px 12px;
}

#scanner:hover #innerQR {
  transform: scale(1.2);
}


/*  */

.tokenField {
  grid-template-rows: 31px 37px 14px;
  grid-template-columns: 10px 60px 10px 5px auto 50px;
  display: grid;
  height: 82px;
  background-color: #f9f9f9;
  margin: 8px 0 8px 8px;
  box-shadow: var(--shadow);
  grid-template-areas:
      ". issuer issuer . name name"
      ". issuer issuer . code time"
      ". issuer issuer . . .";
}

.tokenSecret {
  grid-area: code;
  font-size: 34px;
  justify-self: start;
  align-self: center;
  color: var(--code-blue);
  margin-bottom: 6px; /* temporary */
  letter-spacing: 1.1px;
  /* user-select: text;   no because of the space. so it'll be a (forced) click to copy instead.*/
}

.tokenIssuer {
  grid-area: issuer;
  justify-self: center;
  align-self: center;
  width: 48px;
  height: 48px;
  user-select: none;
}

.tokenIssuer img { /* temporary */
  width: inherit
}

.tokenUser {
  grid-area: name;
  align-self: end;
  justify-self: start;
  margin: 0 0 1px 2px; /* temporary */
  overflow: hidden;
  width: 67%; /* 87%; */
  text-overflow: ellipsis;
  user-select: text;
}

/* Bottom Section - Chin (Visual Only) */

.rim {
  height: 30px;
  position: relative;
  background-color: var(--slightly-darker-grey);
  box-shadow: var(--shadow);
}



/* Temp - Delete */

.tokenField:hover .deleteButton {
  opacity: 1;
}

.deleteButton {
  top: 4px;
  left: 20px;
  position: relative;
  grid-area: 1 / 6 / 2 / 7;
  opacity: 0;
  /* transition: 70ms ease-in-out opacity; */
}

.deleteButton svg {
  width:16px;
  fill: #b1b1b1;
  cursor: pointer;
}

.deleteButton:hover svg {
  fill: #838383;
}

dialog {
  margin: auto;
  border: none;
  padding: 1.8em;
  border-radius: 10px;
  box-shadow: var(--shadow);
  width: 83%;
  height: 69%;
  font-size: 14px;

}

dialog[open] {
  animation: fade-in 0.2s ease-in-out;
}

dialog::backdrop {
  background-color: #00000057;
  animation: fade-in 0.2s ease-in-out;
}

dialog h3 {
  font-size: 15px;
  font-weight: 600;
  text-align: center;
  text-overflow: ellipsis;
  overflow: hidden;
}

#dialogUser {
  padding-right: 14px;
  max-width: 74%;
  display: inline-block;
}

dialog p {
  margin-top: 10px;
}

dialog ul {
  padding-inline-start: 15px;
  margin-top: 13px;
}

dialog li {
  margin-top:7px;
}

dialog div:last-child {
  margin-top: 24px;
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

dialog button {
  border: none;
  background-color: transparent;
  font-size: 15px;
  letter-spacing: 0.3px;
  cursor: pointer;
  color: var(--code-blue);
}

#delY {
  color: #e63131; /*  brighter - #e63131 */
}

/* Temp - Testing CountDown */

.countdown {
  grid-area: time;
}

.base-timer {
  position: relative;
  height: 30px;
  width: 30px;
}

/* Removes SVG styling that would hide the time label */
.base-timer__circle {
  fill: none;
  stroke: none;
}

/* The SVG path that displays the timer's progress   */
.base-timer__path-elapsed {
  stroke-width: 5px;
  stroke: #b1b1b1;  
}

.base-timer__label {
  position: absolute;
  
  /* Size should match the parent container */
  width: 30px;
  height: 30px;
  
  /* Keep the label aligned to the top */
  top: 0;
  
  /* Create a flexible box that centers content vertically and horizontally */
  display: flex;
  font-size: 13px;
  justify-content: center;
  align-items: center;
  right: 0.3px;
  color: var(--code-blue)
}

.base-timer__path-remaining {
  /* Just as thick as the original ring */
  stroke-width: 5px;

  /* Rounds the line endings to create a seamless circle */
  /* stroke-linecap: round; */

  /* Makes sure the animation starts at the top of the circle */
  transform: rotate(90deg);
  transform-origin: center;

  /* One second aligns with the speed of the countdown timer */
  transition: 1s linear all;

  /* Allows the ring to change color when the color value updates */
  stroke: currentColor;
  color: var(--code-blue);

  /* stroke-dasharray: 144.51; */
/* 
  animation-name: timer;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-duration: 30s;   */

}
/* 
@keyframes timer {
    100% {
        stroke-dashoffset: -144.51
    }
} */

.base-timer__svg {
  /* Flips the svg and makes the animation to move left-to-right */
  /* transform: scaleX(-1); */
}





@keyframes fade-in{
  0%{
    opacity: 0;
  }
  100%{
    opacity: 1;
  }
}

.imageSmall {
  width: 17px;
  display: inline-block;
  margin-left: 6px;
}